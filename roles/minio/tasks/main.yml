---
- name: create minio group
  group:
    name: "{{ minio_user }}"
    state: present

- name: create minio user
  user:
    name: minio
    shell: /bin/bash
    group: "{{ minio_group }}"

- name: install nginx and minio components
  apt:
    name: "{{ item }}"
    state: present
    update_cache: yes
    cache_valid_time: 3600
  with_items:
    - jq
    - nginx

- name: download minio
  get_url:
    url: "{{ minio_url }}"
    dest: "{{ minio_bin }}"
    mode: 0755

- name: set up minio EnvironmentFile for systemd
  template:
    src: minio.j2
    dest: /etc/default/minio
    mode: 0644
    owner: root
    group: root

- name: create minio service unit file for systemd
  template:
    src: minio.service.j2
    dest: /etc/systemd/system/minio.service
    mode: 0644
    owner: root
    group: root

- name: enable minio service
  systemd:
    daemon_reload: yes
    enabled: yes
    name: minio.service
    state: started
  tags: enable-minio

- name: configure nginx service
  template:
    src: nginx.conf.j2
    dest: /etc/nginx/nginx.conf
    mode: 0644

- name: get active nginx sites
  shell: ls -1 /etc/nginx/sites-enabled
  register: active

- name: disable unwanted sites
  file:
    path: /etc/nginx/sites-enabled/{{ item }}
    state: absent
  with_items: "{{ active.stdout_lines }}"
  when: item not in sites
  notify: restart nginx

- name: configure server block
  template:
    src: server-block.conf.j2
    dest: /etc/nginx/sites-available/{{ item.key }}
    mode: 0644
  with_dict: "{{ sites }}"
  notify: restart nginx

- name: enable new site
  file:
    src: /etc/nginx/sites-available/{{ item.key }}
    dest: /etc/nginx/sites-enabled/{{ item.key }}
    state: link
  with_dict: "{{ sites }}"
  notify: restart nginx

- name: create motd update script
  template:
    src: update-motd.sh
    dest: /usr/local/bin/update-motd.sh
    mode: 0755

- name: set up motd cron
  cron:
    name: "update motd"
    job: "/usr/local/bin/update-motd.sh > /dev/null"
